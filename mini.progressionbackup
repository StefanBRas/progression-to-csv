{"up.json": "[{\"createdTime\":1490555181375,\"days\":[{\"activities\":[{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"7\",\"instructions\":\"Lie down on a flat bench under a barbell. Preferably in a rack, for your own safety. Begin the movement by unracking the barbell and lowering it towards your chest, once it hits the chest, push it back up. Consider using a spotter if you're lifting heavy weights.\",\"name\":\"Barbell Bench Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":5,\"secondaryTargetMuscles\":[7,8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"150\",\"instructions\":\"Put the barbell on your upper back and squat down until your thighs are parallel to the floor. Then stand back up. Keep your back straight and abs flexed throughout the movement.\",\"name\":\"Barbell Squat\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":6,\"secondaryTargetMuscles\":[1,4],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"75\",\"instructions\":\"Stand up with a barbell resting on your upper chest. Keep your abs flexed and back straight as you press the weight straight up above your head, and then lower it back down.\",\"name\":\"Barbell Shoulder Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":7,\"secondaryTargetMuscles\":[8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"104\",\"instructions\":\"Hang freely from a pull-up-bar with a little less than a shoulder width grip. Your palms should be facing inwards against you. Pull yourself up until your chin is above the bar. Then lower yourself back down until your arms are fully stretched. See Weighted Chins if you are using extra weights.\",\"name\":\"Chinup\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":3,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"118\",\"instructions\":\"Adjust the machine so that your legs fit comfortably under the rack. Grab the bar and sit down with your legs under the rack. With a slight arch in your lower back begin pulling down towards your upper chest. After touching your chest with the bar, slowly return it until your arms and lats are fully stretched.\",\"name\":\"Machine Lat Pulldown\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":4,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0}],\"index\":0,\"name\":\"OnsdagB\",\"note\":\"Lat pd for de chin ups du ikke kan\",\"type\":0},{\"activities\":[{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"7\",\"instructions\":\"Lie down on a flat bench under a barbell. Preferably in a rack, for your own safety. Begin the movement by unracking the barbell and lowering it towards your chest, once it hits the chest, push it back up. Consider using a spotter if you're lifting heavy weights.\",\"name\":\"Barbell Bench Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":5,\"secondaryTargetMuscles\":[7,8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"129\",\"instructions\":\"Stand up straight with a barbell resting on the floor just in front of you. Squat down and grab onto the bar just outside of your thighs, flex your abs and arch your back, then simply stand up. The bar should follow your thighs along the way.\",\"name\":\"Barbell Deadlift\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":true,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[6,3,1],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"75\",\"instructions\":\"Stand up with a barbell resting on your upper chest. Keep your abs flexed and back straight as you press the weight straight up above your head, and then lower it back down.\",\"name\":\"Barbell Shoulder Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":true,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":7,\"secondaryTargetMuscles\":[8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"109\",\"instructions\":\"Grab a barbell with a little wider than a shoulder width grip. While keeping your back straight and abs flexed, bend over until your back is at a 45 degree angle towards the floor. Pull the barbell towards your abs and stop when they touch, then let the barbell back down so you end up with your arms fully stretched out.\",\"name\":\"Bent-Over Barbell Row\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0}],\"index\":1,\"name\":\"FredagB\",\"note\":\"50,85,36,40\",\"type\":0},{\"activities\":[{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"7\",\"instructions\":\"Lie down on a flat bench under a barbell. Preferably in a rack, for your own safety. Begin the movement by unracking the barbell and lowering it towards your chest, once it hits the chest, push it back up. Consider using a spotter if you're lifting heavy weights.\",\"name\":\"Barbell Bench Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":5,\"secondaryTargetMuscles\":[7,8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"150\",\"instructions\":\"Put the barbell on your upper back and squat down until your thighs are parallel to the floor. Then stand back up. Keep your back straight and abs flexed throughout the movement.\",\"name\":\"Barbell Squat\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"6\u00f8\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":6,\"secondaryTargetMuscles\":[1,4],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"75\",\"instructions\":\"Stand up with a barbell resting on your upper chest. Keep your abs flexed and back straight as you press the weight straight up above your head, and then lower it back down.\",\"name\":\"Barbell Shoulder Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":7,\"secondaryTargetMuscles\":[8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"104\",\"instructions\":\"Hang freely from a pull-up-bar with a little less than a shoulder width grip. Your palms should be facing inwards against you. Pull yourself up until your chin is above the bar. Then lower yourself back down until your arms are fully stretched. See Weighted Chins if you are using extra weights.\",\"name\":\"Chinup\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":3,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"118\",\"instructions\":\"Adjust the machine so that your legs fit comfortably under the rack. Grab the bar and sit down with your legs under the rack. With a slight arch in your lower back begin pulling down towards your upper chest. After touching your chest with the bar, slowly return it until your arms and lats are fully stretched.\",\"name\":\"Machine Lat Pulldown\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":4,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0}],\"index\":2,\"name\":\"MandagA\",\"note\":\"Kun pull down for de chins up jeg ikke kan\",\"type\":0},{\"activities\":[{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"7\",\"instructions\":\"Lie down on a flat bench under a barbell. Preferably in a rack, for your own safety. Begin the movement by unracking the barbell and lowering it towards your chest, once it hits the chest, push it back up. Consider using a spotter if you're lifting heavy weights.\",\"name\":\"Barbell Bench Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":5,\"secondaryTargetMuscles\":[7,8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"129\",\"instructions\":\"Stand up straight with a barbell resting on the floor just in front of you. Squat down and grab onto the bar just outside of your thighs, flex your abs and arch your back, then simply stand up. The bar should follow your thighs along the way.\",\"name\":\"Barbell Deadlift\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[6,3,1],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"75\",\"instructions\":\"Stand up with a barbell resting on your upper chest. Keep your abs flexed and back straight as you press the weight straight up above your head, and then lower it back down.\",\"name\":\"Barbell Shoulder Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":7,\"secondaryTargetMuscles\":[8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"109\",\"instructions\":\"Grab a barbell with a little wider than a shoulder width grip. While keeping your back straight and abs flexed, bend over until your back is at a 45 degree angle towards the floor. Pull the barbell towards your abs and stop when they touch, then let the barbell back down so you end up with your arms fully stretched out.\",\"name\":\"Bent-Over Barbell Row\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0}],\"index\":3,\"name\":\"OnsdagA\",\"type\":0},{\"activities\":[{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"7\",\"instructions\":\"Lie down on a flat bench under a barbell. Preferably in a rack, for your own safety. Begin the movement by unracking the barbell and lowering it towards your chest, once it hits the chest, push it back up. Consider using a spotter if you're lifting heavy weights.\",\"name\":\"Barbell Bench Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":true,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":5,\"secondaryTargetMuscles\":[7,8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"150\",\"instructions\":\"Put the barbell on your upper back and squat down until your thighs are parallel to the floor. Then stand back up. Keep your back straight and abs flexed throughout the movement.\",\"name\":\"Barbell Squat\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":true,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":6,\"secondaryTargetMuscles\":[1,4],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"75\",\"instructions\":\"Stand up with a barbell resting on your upper chest. Keep your abs flexed and back straight as you press the weight straight up above your head, and then lower it back down.\",\"name\":\"Barbell Shoulder Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":7,\"secondaryTargetMuscles\":[8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"104\",\"instructions\":\"Hang freely from a pull-up-bar with a little less than a shoulder width grip. Your palms should be facing inwards against you. Pull yourself up until your chin is above the bar. Then lower yourself back down until your arms are fully stretched. See Weighted Chins if you are using extra weights.\",\"name\":\"Chinup\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":3,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"118\",\"instructions\":\"Adjust the machine so that your legs fit comfortably under the rack. Grab the bar and sit down with your legs under the rack. With a slight arch in your lower back begin pulling down towards your upper chest. After touching your chest with the bar, slowly return it until your arms and lats are fully stretched.\",\"name\":\"Machine Lat Pulldown\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":4,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0}],\"index\":4,\"name\":\"FredagA\",\"note\":\"Lat pd for de chin ups du ikke kan\",\"type\":0},{\"activities\":[{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"7\",\"instructions\":\"Lie down on a flat bench under a barbell. Preferably in a rack, for your own safety. Begin the movement by unracking the barbell and lowering it towards your chest, once it hits the chest, push it back up. Consider using a spotter if you're lifting heavy weights.\",\"name\":\"Barbell Bench Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":120000},\"equipment\":1,\"mainTargetMuscle\":5,\"secondaryTargetMuscles\":[7,8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"129\",\"instructions\":\"Stand up straight with a barbell resting on the floor just in front of you. Squat down and grab onto the bar just outside of your thighs, flex your abs and arch your back, then simply stand up. The bar should follow your thighs along the way.\",\"name\":\"Barbell Deadlift\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":8,\"minReps\":8}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[6,3,1],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"75\",\"instructions\":\"Stand up with a barbell resting on your upper chest. Keep your abs flexed and back straight as you press the weight straight up above your head, and then lower it back down.\",\"name\":\"Barbell Shoulder Press\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":0},\"equipment\":1,\"mainTargetMuscle\":7,\"secondaryTargetMuscles\":[8],\"type\":0},{\"@type\":\"MuscleActivity\",\"custom\":false,\"id\":\"109\",\"instructions\":\"Grab a barbell with a little wider than a shoulder width grip. While keeping your back straight and abs flexed, bend over until your back is at a 45 degree angle towards the floor. Pull the barbell towards your abs and stop when they touch, then let the barbell back down so you end up with your arms fully stretched out.\",\"name\":\"Bent-Over Barbell Row\",\"performanceTarget\":{\"groupIndex\":-1,\"note\":\"\",\"parameters\":[{\"allOut\":false,\"index\":0,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":1,\"mark\":0,\"maxReps\":8,\"minReps\":8},{\"allOut\":false,\"index\":2,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":3,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":4,\"mark\":0,\"maxReps\":4,\"minReps\":4},{\"allOut\":false,\"index\":5,\"mark\":0,\"maxReps\":4,\"minReps\":4}],\"restPerSet\":90000},\"equipment\":1,\"mainTargetMuscle\":2,\"secondaryTargetMuscles\":[3],\"type\":0}],\"index\":5,\"name\":\"MandagB\",\"type\":0}],\"id\":\"94a32103-1ebf-42fb-baef-4afd08737660\",\"name\":\"Ivysaur\",\"upcomingDayIndex\":0}]", "preferences_": "{\"analytics\":false,\"pref_exercise_statistics_list_sort_option\":3,\"rest_timer_sound\":false,\"auto_input\":true,\"fullscreen\":false,\"download_exercise_images_over_mobile\":false,\"pref_exercises_list_sort_option\":0,\"show_exercise_images\":true,\"mute\":true,\"pref_keep_screen_on\":true}", "fws.json": "[{\"programId\": \"94a32103-1ebf-42fb-baef-4afd08737660\", \"comment\": \"Ondt i h\\u00e5ndled irriterende nok\", \"startTime\": 1528572666345, \"id\": \"f241bd2d-4703-4399-a0e4-d01e4e871003\", \"activities\": [{\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 4, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 5, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 6, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 7, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 120000, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [7, 8], \"type\": 0, \"mainTargetMuscle\": 5, \"custom\": false, \"id\": \"7\", \"@type\": \"MuscleActivity\", \"equipment\": 1, \"name\": \"Barbell Bench Press\", \"performance\": {\"completedSets\": [{\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528572711389, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528572818186, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 4, \"completedAt\": 1528572995999, \"mark\": 0, \"duration\": 0}, {\"weight\": 50.0, \"reps\": 8, \"completedAt\": 1528573158636, \"mark\": 0, \"duration\": 0}, {\"weight\": 50.0, \"reps\": 8, \"completedAt\": 1528573370815, \"mark\": 0, \"duration\": 0}, {\"weight\": 50.0, \"reps\": 6, \"completedAt\": 1528573599414, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 12, \"completedAt\": 1528574011953, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 12, \"completedAt\": 1528574271087, \"mark\": 0, \"duration\": 0}]}}, {\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 4, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 5, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 90000, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [6, 3, 1], \"type\": 0, \"mainTargetMuscle\": 2, \"custom\": false, \"id\": \"129\", \"@type\": \"MuscleActivity\", \"equipment\": 1, \"name\": \"Barbell Deadlift\", \"performance\": {\"completedSets\": [{\"weight\": 60.0, \"reps\": 8, \"completedAt\": 1528573767213, \"mark\": 0, \"duration\": 0}, {\"weight\": 60.0, \"reps\": 8, \"completedAt\": 1528574080369, \"mark\": 0, \"duration\": 0}, {\"weight\": 80.0, \"reps\": 8, \"completedAt\": 1528574412060, \"mark\": 0, \"duration\": 0}, {\"weight\": 80.0, \"reps\": 8, \"completedAt\": 1528574609011, \"mark\": 0, \"duration\": 0}, {\"weight\": 80.0, \"reps\": 8, \"completedAt\": 1528574956025, \"mark\": 0, \"duration\": 0}, {\"weight\": 80.0, \"reps\": 8, \"completedAt\": 1528575279504, \"mark\": 0, \"duration\": 0}]}}, {\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 4, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 5, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 6, \"mark\": 0}], \"restPerSet\": 0, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [3], \"type\": 0, \"mainTargetMuscle\": 2, \"custom\": false, \"id\": \"110\", \"@type\": \"MuscleActivity\", \"equipment\": 2, \"name\": \"Single-Arm Dumbbell Row on Bench\", \"performance\": {\"completedSets\": [{\"weight\": 15.0, \"reps\": 8, \"completedAt\": 1528575945385, \"mark\": 0, \"duration\": 0}, {\"weight\": 15.0, \"reps\": 8, \"completedAt\": 1528576621190, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528576623481, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528576828773, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528577152128, \"mark\": 0, \"duration\": 0}]}}, {\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 4, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 5, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 6, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 0, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [8], \"type\": 0, \"mainTargetMuscle\": 7, \"custom\": false, \"id\": \"75\", \"@type\": \"MuscleActivity\", \"equipment\": 1, \"name\": \"Barbell Shoulder Press\", \"performance\": {\"completedSets\": [{\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528574706659, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1528574958039, \"mark\": 0, \"duration\": 0}, {\"weight\": 30.0, \"reps\": 4, \"completedAt\": 1528575394182, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 4, \"completedAt\": 1528575535571, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 4, \"completedAt\": 1528575743839, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 4, \"completedAt\": 1528576246093, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 4, \"completedAt\": 1528576533102, \"mark\": 0, \"duration\": 0}]}}], \"name\": \"MandagB\", \"endTime\": 1528577207832, \"programDayIndex\": 5}, {\"programId\": \"94a32103-1ebf-42fb-baef-4afd08737660\", \"comment\": \"P\\u00e6nt weak dag\", \"startTime\": 1527620654930, \"id\": \"5fdb7528-0230-45c3-afdf-1dc69c560b33\", \"activities\": [{\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 4, \"mark\": 0}, {\"allOut\": true, \"minReps\": 4, \"maxReps\": 4, \"index\": 5, \"mark\": 0}, {\"allOut\": true, \"minReps\": 4, \"maxReps\": 4, \"index\": 6, \"mark\": 0}, {\"allOut\": true, \"minReps\": 4, \"maxReps\": 4, \"index\": 7, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 90000, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [7, 8], \"type\": 0, \"mainTargetMuscle\": 5, \"custom\": false, \"id\": \"7\", \"@type\": \"MuscleActivity\", \"equipment\": 1, \"name\": \"Barbell Bench Press\", \"performance\": {\"completedSets\": [{\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1527620724220, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1527620774951, \"mark\": 0, \"duration\": 0}, {\"weight\": 40.0, \"reps\": 4, \"completedAt\": 1527620856543, \"mark\": 0, \"duration\": 0}, {\"weight\": 50.0, \"reps\": 4, \"completedAt\": 1527621031099, \"mark\": 0, \"duration\": 0}, {\"weight\": 58.0, \"reps\": 4, \"completedAt\": 1527621236486, \"mark\": 0, \"duration\": 0}, {\"weight\": 58.0, \"reps\": 4, \"completedAt\": 1527621456806, \"mark\": 0, \"duration\": 0}, {\"weight\": 55.0, \"reps\": 4, \"completedAt\": 1527621757483, \"mark\": 0, \"duration\": 0}, {\"weight\": 55.0, \"reps\": 4, \"completedAt\": 1527622078575, \"mark\": 0, \"duration\": 0}]}}, {\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 4, \"maxReps\": 4, \"index\": 4, \"mark\": 0}, {\"allOut\": true, \"minReps\": 4, \"maxReps\": 4, \"index\": 5, \"mark\": 0}, {\"allOut\": true, \"minReps\": 4, \"maxReps\": 4, \"index\": 6, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 90000, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [1, 4], \"type\": 0, \"mainTargetMuscle\": 6, \"custom\": false, \"id\": \"150\", \"@type\": \"MuscleActivity\", \"equipment\": 1, \"name\": \"Barbell Squat\", \"performance\": {\"completedSets\": [{\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1527621628390, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1527621940707, \"mark\": 0, \"duration\": 0}, {\"weight\": 60.0, \"reps\": 4, \"completedAt\": 1527622285363, \"mark\": 0, \"duration\": 0}, {\"weight\": 70.0, \"reps\": 4, \"completedAt\": 1527622389486, \"mark\": 0, \"duration\": 0}, {\"weight\": 70.0, \"reps\": 4, \"completedAt\": 1527622585145, \"mark\": 0, \"duration\": 0}, {\"weight\": 70.0, \"reps\": 4, \"completedAt\": 1527622836942, \"mark\": 0, \"duration\": 0}, {\"weight\": 70.0, \"reps\": 4, \"completedAt\": 1527623162910, \"mark\": 0, \"duration\": 0}]}}, {\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 3, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 4, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 5, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 6, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 90000, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [8], \"type\": 0, \"mainTargetMuscle\": 7, \"custom\": false, \"id\": \"75\", \"@type\": \"MuscleActivity\", \"equipment\": 1, \"name\": \"Barbell Shoulder Press\", \"performance\": {\"completedSets\": [{\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1527622644622, \"mark\": 0, \"duration\": 0}, {\"weight\": 20.0, \"reps\": 8, \"completedAt\": 1527622884937, \"mark\": 0, \"duration\": 0}, {\"weight\": 30.0, \"reps\": 4, \"completedAt\": 1527623316668, \"mark\": 0, \"duration\": 0}, {\"weight\": 37.0, \"reps\": 8, \"completedAt\": 1527623417220, \"mark\": 0, \"duration\": 0}, {\"weight\": 37.0, \"reps\": 4, \"completedAt\": 1527623576333, \"mark\": 0, \"duration\": 0}, {\"weight\": 35.0, \"reps\": 5, \"completedAt\": 1527623746868, \"mark\": 0, \"duration\": 0}, {\"weight\": 35.0, \"reps\": 5, \"completedAt\": 1527624029494, \"mark\": 0, \"duration\": 0}]}}, {\"performanceTarget\": {\"parameters\": [{\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 0, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 1, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 2, \"mark\": 0}, {\"allOut\": false, \"minReps\": 8, \"maxReps\": 8, \"index\": 3, \"mark\": 0}], \"note\": \"\", \"restPerSet\": 90000, \"groupIndex\": -1}, \"secondaryTargetMuscles\": [3], \"type\": 0, \"mainTargetMuscle\": 2, \"custom\": false, \"id\": \"104\", \"@type\": \"MuscleActivity\", \"equipment\": 3, \"name\": \"Chinup\", \"performance\": {\"completedSets\": [{\"weight\": 0.0, \"reps\": 4, \"completedAt\": 1527623628073, \"mark\": 0, \"duration\": 0}, {\"weight\": 0.0, \"reps\": 4, \"completedAt\": 1527623818248, \"mark\": 0, \"duration\": 0}, {\"weight\": 0.0, \"reps\": 4, \"completedAt\": 1527624111582, \"mark\": 0, \"duration\": 0}, {\"weight\": 0.0, \"reps\": 3, \"completedAt\": 1527624274751, \"mark\": 0, \"duration\": 0}]}}], \"name\": \"FredagA\", \"endTime\": 1527624349765, \"programDayIndex\": 4}]"}